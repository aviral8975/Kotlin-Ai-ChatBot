package com.example.aichatbot1.ui

import android.content.Intent
import android.net.Uri
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.os.Message
import android.provider.Settings
import androidx.recyclerview.widget.LinearLayoutManager
import com.example.aichatbot1.R
import com.example.aichatbot1.util.BotResponse
import com.example.aichatbot1.util.Constants.OPEN_GOOGLE
import com.example.aichatbot1.util.Constants.OPEN_SEARCH
import com.example.aichatbot1.util.Constants.OPEN_YOUTUBE
import com.example.aichatbot1.util.Constants.RECEIVE_ID
import com.example.aichatbot1.util.Constants.SEND_ID
import com.example.aichatbot1.util.Time
import kotlinx.android.synthetic.main.activity_main.*
import kotlinx.coroutines.*


class MainActivity : AppCompatActivity() {

    private lateinit var adapter: MessagingAdapter
    private val botlist = listOf("peter","Igor", "Samantha", "Alexis")


    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        recyclerView()

        clickEvents()

        val random = (0..3).random()
        customMessage("Hello today you are speaking with ${botlist[random]} ! ")
    }

    private fun clickEvents(){
        send_bttn.setOnClickListener {
            sendMssg()
        }
        et_mssg.setOnClickListener {
            GlobalScope.launch {
                delay(1000)
                withContext(Dispatchers.Main){
                    rv_mssgs.scrollToPosition(adapter.itemCount-1)
                }
            }
        }
    }


    private fun recyclerView(){
        adapter = MessagingAdapter()
        rv_mssgs.adapter = adapter
        rv_mssgs.layoutManager = LinearLayoutManager(applicationContext)

    }

    private fun sendMssg(){
        val message = et_mssg.text.toString()
        val timeStamp = Time.timeStamp()

        if (message.isNotEmpty()){
            et_mssg.setText("")

            adapter.insertMessage(com.example.aichatbot1.data.Message(message, SEND_ID, timeStamp))
            rv_mssgs.scrollToPosition(adapter.itemCount-1)

            botResponse(message)
        }
    }

    private fun botResponse(message: String){
        val timeStamp = Time.timeStamp()

        GlobalScope.launch {
            delay(1000)

            withContext(Dispatchers.Main) {
                val response = BotResponse.basicResponse(message)
                adapter.insertMessage(
                    com.example.aichatbot1.data.Message(
                        response,
                        RECEIVE_ID,
                        timeStamp
                    )
                )

                rv_mssgs.scrollToPosition(adapter.itemCount-1)
                when(response){
                    OPEN_GOOGLE -> {
                        val site = Intent(Intent.ACTION_VIEW)
                        site.data = Uri.parse("https://www.google.com/")
                        startActivity(site)
                    }
                    OPEN_SEARCH -> {
                        val site = Intent(Intent.ACTION_VIEW)
                        val searchTerm: String? = message.substringAfter("search")
                        site.data = Uri.parse("https://www.google.com/search?&q=$searchTerm")
                        startActivity(site)
                    }
                    OPEN_YOUTUBE -> {
                        val site = Intent(Intent.ACTION_VIEW)
                        val vidtype: String? = message.substringAfter("play")
                        if(vidtype == "LOFI") {
                            site.data = Uri.parse("https://m.youtube.com/watch?v=rA56B4JyTgl")
                        }
                        startActivity(site)
                    }
                }

            }
        }
    }

    override fun onStart() {
        super.onStart()

        GlobalScope.launch {
            delay(1000)

            withContext(Dispatchers.Main){
                rv_mssgs.scrollToPosition(adapter.itemCount -1)
            }
        }
    }

    private fun customMessage(message: String){

        GlobalScope.launch {
            delay(1000)
            withContext(Dispatchers.Main){
            val timeStamp = Time.timeStamp()
            adapter.insertMessage(com.example.aichatbot1.data.Message(message, RECEIVE_ID, timeStamp))
            rv_mssgs.scrollToPosition(adapter.itemCount-1)
        }

        }
    }
}
